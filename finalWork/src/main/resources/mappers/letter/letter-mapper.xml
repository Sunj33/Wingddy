<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="letterMapper">

<resultMap id="letterResultSet" 	 	 type="letter"> 
	<result column="LETTER_NO"			 property="letterNo" />
	<result column="CLASS_NO"			 property="classNo" />
	<result column="SENDER" 			 property="sender" />
	<result column="RECIPIENT" 	  		 property="recipient" />
	<result column="LETTER_CONTENT" 	 property="letterContent" />
	<result column="SEND_DATE" 			 property="sendDate" />
	<result column="ANONYMOUS" 			 property="anonymous" />
	<result column="TO_MANITTO" 		 property="toManitto" />
	<result column="GIFT"				 property="gift" />
	<result column="GET_GIFT" 			 property="getGift" />
	<result column="READ_CHECK" 		 property="readCheck" />
	<result column="CLASS_NAME" 		 property="className" />
	
	<result column="MEMBER_NO" 			 property="memberNo" />
</resultMap>


<select id="receviedCount" parameterType="letter" resultType="_int">
SELECT COUNT(*)
  FROM LETTER
  JOIN MEMBER USING ON (SENDER = MEMBER_NO)
 WHERE CLASS_NO = #{classNo}
   AND RECIPIENT = #{recipient}
   AND RECIPIENT_STATUS = 'Y'
   AND LETTER_CONTENT LIKE '%'||#{keyword}||'%'
 ORDER BY SEND_DATE DESC
</select>

<select id="sentCount" parameterType="letter" resultType="_int">
SELECT COUNT(*)
   FROM LETTER
   JOIN MEMBER USING ON (RECIPIENT = MEMBER_NO)
  WHERE CLASS_NO = #{classNo}
    AND SENDER = #{sender}
    AND SENDER_STATUS = 'Y'
    AND LETTER_CONTENT LIKE '%'||#{keyword}||'%'
  ORDER BY SEND_DATE DESC
</select>


<select id="ajaxReceivedLetter" parameterType="letter" resultMap="letterResultSet">
SELECT LETTER_NO, MEMBER_ID||'('||MEMBER_NAME||')' AS "SENDER", SUBSTR(LETTER_CONTENT, 0, 20)||'...' AS "LETTER_CONTENT", TO_CHAR(SEND_DATE, 'YYYY/MM/DD') AS "SEND_DATE", ANONYMOUS, GIFT, READ_CHECK, TO_MANITTO
  FROM LETTER
  JOIN MEMBER USING ON (SENDER = MEMBER_NO)
 WHERE CLASS_NO = #{classNo}
   AND RECIPIENT = #{recipient}
   AND RECIPIENT_STATUS = 'Y'
   AND LETTER_CONTENT LIKE '%'||#{keyword}||'%'
 ORDER BY LETTER_NO DESC
</select>

<select id="ajaxSentLetter" parameterType="letter" resultMap="letterResultSet">
 SELECT LETTER_NO, MEMBER_ID||'('||MEMBER_NAME||')' AS "RECIPIENT", SUBSTR(LETTER_CONTENT, 0, 20)||'...' AS "LETTER_CONTENT", TO_CHAR(SEND_DATE, 'YYYY/MM/DD') AS "SEND_DATE", ANONYMOUS, GIFT, READ_CHECK, TO_MANITTO
   FROM LETTER
   JOIN MEMBER USING ON (RECIPIENT = MEMBER_NO)
  WHERE CLASS_NO = #{classNo}
    AND SENDER = #{sender}
    AND SENDER_STATUS = 'Y'
    AND LETTER_CONTENT LIKE '%'||#{keyword}||'%'
  ORDER BY LETTER_NO DESC
</select>


<select id="selectRecipient" resultMap="letterResultSet">
SELECT MEMBER_ID||'('||MEMBER_NAME||')' as "RECIPIENT", MEMBER_NO
  FROM CLASS_MEMBER
  JOIN MEMBER ON(STUDENT_NO = MEMBER_NO)
 WHERE CLASS_NO = #{cno}
   AND ENTER_STATUS = 'Y'
</select>


<select id="selectMymanitto" parameterType="letter" resultType="Integer">
SELECT MANITTO
  FROM MANITTO
 WHERE CLASS_NO = #{classNo}
   AND MANITTI = #{sender}
</select>


<select id="selectMymanitti" parameterType="letter" resultType="Integer">
SELECT MANITTI
  FROM MANITTO
 WHERE CLASS_NO =  #{classNo}
   AND MANITTO = #{sender}
</select>


<insert id="insertLetter" parameterType="letter">
INSERT INTO LETTER(LETTER_NO, CLASS_NO, SENDER, RECIPIENT, LETTER_CONTENT, SEND_DATE, ANONYMOUS, TO_MANITTO, GIFT, READ_CHECK)
VALUES(SEQ_LETTER_NO.NEXTVAL, #{classNo}, #{sender}, #{recipient}, #{letterContent}, default, #{anonymous, jdbcType=VARCHAR}, #{toManitto, jdbcType=VARCHAR}, #{gift}, default)
</insert>

<update id="changeReadStatus" parameterType="letter">
UPDATE LETTER
   SET READ_CHECK = 'Y'
 WHERE LETTER_NO = #{letterNo}
    AND RECIPIENT = #{memberNo}
</update>


<select id="letterDetail" resultMap="letterResultSet" parameterType="letter">
SELECT LETTER_NO, A.MEMBER_ID||'('||A.MEMBER_NAME||')' as "SENDER", B.MEMBER_ID||'('||B.MEMBER_NAME||')' as "RECIPIENT", LETTER_CONTENT, SEND_DATE, ANONYMOUS, TO_MANITTO, GIFT, READ_CHECK, A.MEMBER_NO AS "MEMBER_NO", GET_GIFT
  FROM LETTER
  JOIN MEMBER A ON(SENDER = A.MEMBER_NO)
  JOIN MEMBER B ON(RECIPIENT = B.MEMBER_NO)
 WHERE LETTER_NO = #{letterNo}
</select>


<update id="updateGetGift" parameterType="letter">
UPDATE LETTER
   SET GET_GIFT = 'Y'
 WHERE LETTER_NO = #{letterNo}
</update>

<insert id="insertAlphabet" parameterType="letter">
INSERT INTO ALPHABET
VALUES(#{memberNo}, #{classNo}, #{gift})
</insert>


<delete id="deleteAlphabet" parameterType="letter">
DELETE FROM ALPHABET
 WHERE CLASS_NO = #{classNo}
   AND MEMBER_NO = #{sender}
   AND ALPHABET = #{gift}
</delete>

<select id="unReadLetter" resultMap="letterResultSet">
SELECT CLASS_NO, CLASS_NAME, LETTER_NO, A.MEMBER_ID||'('||A.MEMBER_NAME||')' as "SENDER", B.MEMBER_ID||'('||B.MEMBER_NAME||')' as "RECIPIENT", LETTER_CONTENT, SEND_DATE, ANONYMOUS, TO_MANITTO
  FROM LETTER
  JOIN MEMBER A ON(SENDER = A.MEMBER_NO)
  JOIN MEMBER B ON(RECIPIENT = B.MEMBER_NO)
  JOIN CLASSROOM USING(CLASS_NO)
 WHERE RECIPIENT = #{memberNo}
   AND READ_CHECK = 'N'
   AND RECIPIENT_STATUS = 'Y'
 ORDER BY LETTER_NO DESC
</select>

<update id="markAll">
UPDATE LETTER
   SET READ_CHECK = 'Y'
 WHERE RECIPIENT = #{memberNo}
</update>


<update id="deleteLetterSender" parameterType="letter">
UPDATE LETTER
   SET SENDER_STATUS = 'N'
 WHERE LETTER_NO IN
		<foreach collection="letterList" item="item" index="i" open="(" close=")" separator="," >
			#{item}
		</foreach>
</update>

<update id="deleteLetterRecipient" parameterType="letter">
UPDATE LETTER
   SET RECIPIENT_STATUS = 'N'
 WHERE LETTER_NO IN
		<foreach collection="letterList" item="item" index="i" open="(" close=")" separator="," >
			#{item}
		</foreach>
</update>






</mapper>