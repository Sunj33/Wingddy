<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="classMapper">
	
	<resultMap type="class" id="classResultSet">
		<result column="CLASS_NO" property="classNo" />
		<result column="CLASS_NAME" property="className" />
		<result column="TEACHER_NAME" property="teacherName" />
		<result column="ENTER_CODE" property="enterCode" />
	</resultMap>
	
	<resultMap type="classMember" id="classMemberResultSet">
		<result column="CLASS_NO" property="classNo" />
		<result column="STUDENT_NO" property="studentNo" />
		<result column="ENTER_STATUS" property="enterStatus" />
		<result column="MEMBER_ID" property="memberId"/>
		<result column="MEMBER_NO" property="memberNo"/>
		<result column="MEMBER_NAME" property="memberName"/>
		<result column="PHONE" property="phone"/>
		<result column="TOTAL_COUNT" property="totalCount"/>
		<result column="COMPLETE_COUNT" property="completeCount"/>
		<result column="PROGRESS_RATE" property="progressRate"/>
	</resultMap>

	<resultMap type="myCount" id="myCountResultSet">
		<result column="CLASS_NO" property="classNo"/>
		<result column="MEMBER_NO" property="memberNo"/>
		<result column="MEMBER_ID" property="memberId"/>
		<result column="MEMBER_NAME" property="memberName"/>
		<result column="PHONE" property="phone"/>
		<result column="COUPON_COUNT" property="couponCount"/>
		<result column="GACHA_COUNT" property="gachaCount"/>
		<result column="TOTAL_COUPON_COUNT" property="totalCouponCount"/>
	</resultMap>
	
	<select id="selectClassList" parameterType="member" resultMap="classResultSet">
		<choose>
			<when test='memberType == "T"' >
				SELECT
				       CLASS_NO
				      ,CLASS_NAME
				      ,ENTER_CODE
				  FROM
				       CLASSROOM
				 WHERE
				       TEACHER_NO = ${memberNo}
				 ORDER
				    BY 
				       CLASS_NO
			</when>
			<otherwise>
				SELECT
				       CLASS_NO
				      ,CLASS_NAME
				      ,MEMBER_NAME TEACHER_NAME
				  FROM
				       CLASS_MEMBER
				  JOIN
				       CLASSROOM USING(CLASS_NO)
				  JOIN
				       MEMBER ON( MEMBER_NO = TEACHER_NO)
				 WHERE
				       STUDENT_NO = ${memberNo}
				   AND
				   	   ENTER_STATUS = 'Y'
  				 ORDER
				    BY 
				       CLASS_NO
			</otherwise>		       
		</choose>
			   
	</select>
	
	<select id="selectPassStudent" parameterType="_int" resultMap="classMemberResultSet">
		SELECT
		       MEMBER_NO,
		       MEMBER_ID,
		       MEMBER_NAME,
		       PHONE,
		       CLASS_NO,
		       ENTER_STATUS,
		       STUDENT_NO
		  FROM
		       CLASS_MEMBER
		  JOIN
		       MEMBER ON(MEMBER_NO = STUDENT_NO)     
		 WHERE
		       CLASS_NO = #{cno}
		   AND
		       ENTER_STATUS = 'N'    
	</select>

	
	<update id="passStudent" parameterType="classMember">
		UPDATE
			   CLASS_MEMBER
		   SET
		       ENTER_STATUS = 'Y'
		 WHERE
		       STUDENT_NO = #{studentNo}
		   AND
		       CLASS_NO = #{classNo}         
	</update>
	
	<insert id="createClassroom" parameterType="class">
		INSERT
		  INTO
		       CLASSROOM
		       (
		       CLASS_NO,
		       TEACHER_NO,
		       CLASS_NAME,
		       ENTER_CODE
		       )
		VALUES      
		       (
		       SEQ_CLASS_NO.NEXTVAL,
		       #{teacherName},
		       #{className},
		       #{enterCode}
		       )
	</insert>

	<select id="selectClassroom" parameterType="_int" resultMap="classResultSet">
		SELECT
		       CLASS_NO,
		       CLASS_NAME,
		       MEMBER_NAME TEACHER_NAME,
		       ENTER_CODE
		  FROM
		       CLASSROOM
		  JOIN
		  	   MEMBER ON (MEMBER_NO = TEACHER_NO)
		 WHERE
		       CLASS_NO = #{cno}           
	</select>
	
	<select id="selectClassRanking" parameterType="_int" resultMap="myCountResultSet">
		SELECT
		       CLASS_NO,
		       MEMBER_NO,
		       TOTAL_COUPON_COUNT,
		       MEMBER_NAME,
		       MEMBER_ID,
		       PHONE
		  FROM
		       CLASS_MYCOUNT 
		  JOIN
		       CLASS_MEMBER  USING(CLASS_NO)
		  JOIN 
		       MEMBER USING(MEMBER_NO)       
		 WHERE
		       CLASS_NO = #{cno}
           AND 
               MEMBER_NO = STUDENT_NO 
		   AND
		       MEMBER_TYPE = 'S'
		   AND
		       ENTER_STATUS = 'Y'     
		 ORDER
		    BY
		       TOTAL_COUPON_COUNT DESC
	</select>
	
	<select id="joinClass" parameterType="string" resultMap="classResultSet">
		SELECT
		       CLASS_NO,
		       CLASS_NAME,
		       MEMBER_NAME TEACHER_NAME,
		       ENTER_CODE
		  FROM
		       CLASSROOM
		  JOIN
		       MEMBER ON(MEMBER_NO = TEACHER_NO)     
		 WHERE
		       ENTER_CODE = #{enterCode}            
	</select>
	
	<insert id="insertPass" parameterType="classMember">
		INSERT
		  INTO
		       CLASS_MEMBER
		       (
		       CLASS_NO,
		       STUDENT_NO
		       )
		VALUES      
		       (
		       #{classNo},
		       #{studentNo}
		       )
	</insert>
	
	<select id="selectProgressRate" parameterType="_int" resultMap="classMemberResultSet">
		SELECT
		       MEMBER_NO
		      ,MEMBER_ID
		      ,MEMBER_NAME
		      ,PHONE
		      ,CLASS_NO
		      ,CC TOTAL_COUNT
		      ,NVL(CM,0) COMPLETE_COUNT
		      ,ROUND(NVL(CM,0)/CC*100, 1) PROGRESS_RATE
		  FROM 
		  	   CLASS_MEMBER
		  JOIN 
		       MEMBER ON (STUDENT_NO = MEMBER_NO)
		  JOIN 
		       (SELECT 
		               CLASS_NO
		              ,COUNT(*) CC
		          FROM 
		               EDUCATION
		         GROUP 
		            BY 
		               CLASS_NO) USING(CLASS_NO)
     LEFT JOIN (SELECT 
         			   MEMBER_NO
         			  ,COUNT(*) CM
		          FROM 
		               EDUCATION
		          JOIN 
		               QUIZ USING(EDU_NO)
		          JOIN 
		               INCORRECT USING(QUIZ_NO)
		         GROUP 
		            BY CLASS_NO, MEMBER_NO) USING(MEMBER_NO)
		 WHERE 
		       CLASS_NO = #{cno}
		   AND 
		       ENTER_STATUS = 'Y'
		   AND 
		       STATUS_YN = 'N'
		 ORDER 
		    BY PROGRESS_RATE DESC
	</select>
	
	<delete id="kickoutStudent" parameterType="classMember">
		DELETE
		  FROM
			   CLASS_MEMBER
		 WHERE
		       STUDENT_NO = #{memberNo}
		   AND
		       CLASS_NO = #{classNo}         
	</delete>
	
</mapper>